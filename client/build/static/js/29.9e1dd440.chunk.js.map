{"version":3,"sources":["pages/auth/RegisterComplete.js"],"names":["RegisterComplete","history","useState","email","setEmail","password","setPassword","useEffect","localStorage","getItem","dispatch","useDispatch","handleSubmit","e","a","preventDefault","toast","error","length","auth","signInWithEmailLink","window","location","href","user","emailVerified","removeItem","currentUser","updatePassword","getIdTokenResult","idTokenResult","console","log","axios","post","authtoken","token","then","res","type","payload","name","data","role","_id","catch","err","push","message","className","onSubmit","value","onChange","target","disabled","placeholder","autoFocus"],"mappings":"sMA4HeA,UAnHS,SAAC,GAAa,IAAZC,EAAW,EAAXA,QAAW,EAEFC,mBAAS,IAFP,mBAEtBC,EAFsB,KAEdC,EAFc,OAGGF,mBAAS,IAHZ,mBAGtBG,EAHsB,KAGZC,EAHY,KAQ7BC,qBAAW,WACTH,EAASI,aAAaC,QAAQ,2BAE7B,IAEH,IAAIC,EAAWC,cAETC,EAAY,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,yDACjBD,EAAEE,iBAGGZ,GAAUE,EAJE,uBAKfW,IAAMC,MAAM,kCALG,+BASbZ,EAASa,OAAS,GATL,uBAUfF,IAAMC,MAAM,8CAVG,oDAgBME,IAAKC,oBAAoBjB,EAAOkB,OAAOC,SAASC,MAhBtD,mBAkBJC,KAAKC,cAlBD,wBAqBXJ,OAAOb,aAAakB,WAAW,wBAG3BF,EAAOL,IAAKQ,YAxBL,UAyBLH,EAAKI,eAAevB,GAzBf,yBA0BiBmB,EAAKK,mBA1BtB,eA0BLC,EA1BK,OA2BXC,QAAQC,IAAI,OAAQR,EAAM,gBAAiBM,GA3BhC,UA+BDG,IAAMC,KACN,mCACA,CAACC,UAAWL,EAAcM,QAC/BC,MACC,SAACC,GACCP,QAAQC,IAAI,uBAAwBM,GACpC5B,EAAS,CACP6B,KAAM,iBACNC,QAAS,CAGPC,KAAOH,EAAII,KAAKD,KAChBtC,MAAQmC,EAAII,KAAKvC,MACjBiC,MAAQN,EAAcM,MACtBO,KAAML,EAAII,KAAKC,KACfC,IAAKN,EAAII,KAAKE,UAIrBC,OAAM,SAACC,GAAD,OAASf,QAAQC,IAAI,yEAlDrB,QAoDb/B,EAAQ8C,KAAK,KApDA,0DAwDfhB,QAAQC,IAAR,MACAhB,IAAMC,MAAM,KAAM+B,SAzDH,0DAAH,sDAwFlB,OACE,qBAAKC,UAAU,gBAAf,SACE,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,uBAAf,UACE,mDA3BR,uBAAMC,SAAUtC,EAAhB,UACE,uBACM2B,KAAK,QACLU,UAAU,eACVE,MAAOhD,EACPiD,SAAU,SAAAvC,GAAC,OAAGT,EAASS,EAAEwC,OAAOF,QAChCG,UAAQ,IAGd,uBACMf,KAAK,WACLU,UAAU,eACVE,MAAO9C,EACP+C,SAAU,SAAAvC,GAAC,OAAGP,EAAYO,EAAEwC,OAAOF,QACnCI,YAAY,WACZC,WAAS,IAEb,uBAEF,wBAAQjB,KAAK,SAASU,UAAU,iBAAhC","file":"static/js/29.9e1dd440.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport { auth } from '../../firebase';\r\nimport {toast} from 'react-toastify';\r\nimport {useDispatch ,useSelector} from 'react-redux';\r\n// import {createOrUpdateUser} from '../../functions/auth';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nconst RegisterComplete =({history})=>{\r\n\r\n        const [email , setEmail] = useState(\"\");\r\n        const [password, setPassword] = useState(\"\");\r\n\r\n        // const { user } = useSelector((state) => ({...state}));\r\n\r\n\r\n        useEffect( () => {\r\n          setEmail(localStorage.getItem('emailForRegistration'));\r\n          // console.log(window.location.href);\r\n        }, []);\r\n\r\n        let dispatch = useDispatch();\r\n\r\n        const handleSubmit = async (e) => {\r\n            e.preventDefault();    //prevent from reload of the page\r\n\r\n            //validation\r\n            if (!email || !password){\r\n              toast.error('Email and password is required');\r\n              return;\r\n            }\r\n\r\n            if (password.length < 6){\r\n              toast.error('Password must be atleast 6 characters long');\r\n              return;\r\n            }\r\n\r\n\r\n            try{\r\n              const result = await auth.signInWithEmailLink(email, window.location.href);\r\n              // console.log(\"result\", result);\r\n              if (result.user.emailVerified){\r\n\r\n                //remove email from localStorage\r\n                  window.localStorage.removeItem('emailForRegistration');\r\n\r\n                // get userid token\r\n                  let user = auth.currentUser;\r\n                  await user.updatePassword(password);\r\n                  const idTokenResult = await user.getIdTokenResult();\r\n                  console.log('user', user, 'idTokenResult', idTokenResult);\r\n                //redux store\r\n\r\n\r\n                      await axios.post(\r\n                            'http://localhost:8000/api/create',\r\n                            {authtoken: idTokenResult.token})\r\n                      .then(\r\n                        (res) => {\r\n                          console.log(\"CREATE OR UPDATE RES\", res);\r\n                          dispatch({\r\n                            type :'LOGGED_IN_USER',\r\n                            payload: {\r\n                              // email : user.email,\r\n                              // token : idTokenResult.token,\r\n                              name : res.data.name,\r\n                              email : res.data.email,\r\n                              token : idTokenResult.token,\r\n                              role: res.data.role,\r\n                              _id: res.data._id,\r\n                            }\r\n                          });\r\n                        })\r\n                      .catch((err) => console.log(\"<<<<<<<<<<<<<OOO MAA GOO ERROR ///RegisterComplete///>>>>>>>>>>>>>\"));\r\n                // redirect\r\n                history.push('/');\r\n              }\r\n            }\r\n            catch (error){\r\n              console.log(error);\r\n              toast.error(error.message);\r\n            }\r\n        };\r\n\r\n\r\n\r\n\r\n        const completeRegistrationForm = () => (\r\n          <form onSubmit={handleSubmit} >\r\n            <input\r\n                  type='email'\r\n                  className=\"form-control\"\r\n                  value={email}\r\n                  onChange={e =>setEmail(e.target.value)}\r\n                  disabled\r\n              />\r\n\r\n            <input\r\n                  type='password'\r\n                  className=\"form-control\"\r\n                  value={password}\r\n                  onChange={e =>setPassword(e.target.value)}\r\n                  placeholder=\"Password\"\r\n                  autoFocus\r\n              />\r\n              <br/>\r\n\r\n            <button type=\"submit\" className=\"btn btn-raised\">Complete Registration</button>\r\n        </form>\r\n      );\r\n\r\n        return (\r\n          <div className=\"container p-5\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 offset-md-3\">\r\n                  <h4>Register Complete</h4>\r\n                  {completeRegistrationForm()}\r\n                </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      };\r\n\r\nexport default RegisterComplete;\r\n"],"sourceRoot":""}