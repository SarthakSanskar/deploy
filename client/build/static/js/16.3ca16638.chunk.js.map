{"version":3,"sources":["components/nav/AdminNav.js","components/forms/CategoryForm.js","pages/admin/category/CategoryUpdate.js"],"names":["AdminNav","className","to","CategoryForm","handleSubmit","name","setName","onSubmit","type","onChange","e","target","value","autoFocus","required","CategoryUpdate","history","match","user","useSelector","state","useState","loading","setLoading","useEffect","loadCategory","getCategory","params","slug","then","c","data","preventDefault","updateCategory","token","res","toast","success","push","catch","err","console","log","response","status","error"],"mappings":"6HAuCeA,IAnCE,kBACf,8BACM,qBAAIC,UAAU,kBAAd,UACI,oBAAIA,UAAY,WAAhB,SACI,cAAC,IAAD,CAAMC,GAAG,mBAAmBD,UAAU,WAAtC,yBAGJ,oBAAIA,UAAY,WAAhB,SACI,cAAC,IAAD,CAAMC,GAAG,iBAAiBD,UAAU,WAApC,uBAGJ,oBAAIA,UAAY,WAAhB,SACI,cAAC,IAAD,CAAMC,GAAG,kBAAkBD,UAAU,WAArC,wBAGJ,oBAAIA,UAAY,WAAhB,SACI,cAAC,IAAD,CAAMC,GAAG,kBAAkBD,UAAU,WAArC,wBAGJ,oBAAIA,UAAY,WAAhB,SACI,cAAC,IAAD,CAAMC,GAAG,aAAaD,UAAU,WAAhC,4BAGJ,oBAAIA,UAAY,WAAhB,SACI,cAAC,IAAD,CAAMC,GAAG,gBAAgBD,UAAU,WAAnC,uBAGJ,oBAAIA,UAAY,WAAhB,SACI,cAAC,IAAD,CAAMC,GAAG,iBAAiBD,UAAU,WAApC,+B,iDCXDE,IAnBM,SAAC,GAAD,IAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,KAAMC,EAAvB,EAAuBA,QAAvB,OACnB,sBAAMC,SAAUH,EAAhB,SACE,sBAAKH,UAAU,aAAf,UACM,yCACA,uBACEO,KAAK,OACLP,UAAU,eACVQ,SAAU,SAACC,GAAD,OAAOJ,EAAQI,EAAEC,OAAOC,QAClCA,MAAOP,EACPQ,WAAS,EACTC,UAAQ,IAET,uBACA,wBAAQb,UAAU,0BAAlB,yB,oHCoDIc,UAvDQ,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,MAC1BC,EAAQC,aAAY,SAACC,GAAD,sBAAiBA,MAArCF,KADsC,EAGtBG,mBAAS,IAHa,mBAGtChB,EAHsC,KAGjCC,EAHiC,OAIhBe,oBAAS,GAJO,mBAItCC,EAJsC,KAI9BC,EAJ8B,KAM7CC,qBAAU,WAENC,MACD,IAEH,IAAMA,EAAe,kBACjBC,YAAYT,EAAMU,OAAOC,MAAMC,MAAK,SAACC,GAAD,OAAOxB,EAAQwB,EAAEC,KAAK1B,UAuB9D,OACA,qBAAKJ,UAAU,kBAAf,SACE,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,WAAf,SACI,cAAC,IAAD,MAEJ,sBAAKA,UAAU,MAAf,UACSqB,EACC,oBAAIrB,UAAU,cAAd,0BAEA,mDAEF,cAAC,IAAD,CAAeI,KAAMA,EAAMD,aA/BpB,SAACM,GACpBA,EAAEsB,iBAEFT,GAAW,GACXU,YAAehB,EAAMU,OAAOC,KAAM,CAACvB,QAAOa,EAAKgB,OAC9CL,MAAK,SAAAM,GACJZ,GAAW,GACXjB,EAAQ,IACR8B,IAAMC,QAAN,WAAkBF,EAAIJ,KAAK1B,KAA3B,iBACAW,EAAQsB,KAAK,sBAEdC,OAAM,SAACC,GACNC,QAAQC,IAAIF,GACZjB,GAAW,GACiB,MAAxBiB,EAAIG,SAASC,QAAgBR,IAAMS,MAAML,EAAIG,SAASZ,UAiBOzB,QAASA,IACpE","file":"static/js/16.3ca16638.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nconst AdminNav = () => (\r\n  <nav>\r\n        <ul className=\"nav flex-column\">\r\n            <li className = 'nav-item'>\r\n                <Link to='/admin/dashboard' className='nav-link'>Dashboard</Link>\r\n            </li>\r\n\r\n            <li className = 'nav-item'>\r\n                <Link to='/admin/product' className='nav-link'>Product</Link>\r\n            </li>\r\n\r\n            <li className = 'nav-item'>\r\n                <Link to='/admin/products' className='nav-link'>Products</Link>\r\n            </li>\r\n\r\n            <li className = 'nav-item'>\r\n                <Link to='/admin/category' className='nav-link'>Category</Link>\r\n            </li>\r\n\r\n            <li className = 'nav-item'>\r\n                <Link to='/admin/sub' className='nav-link'>Sub Category</Link>\r\n            </li>\r\n\r\n            <li className = 'nav-item'>\r\n                <Link to='/admin/coupon' className='nav-link'>Coupons</Link>\r\n            </li>\r\n\r\n            <li className = 'nav-item'>\r\n                <Link to='/user/password' className='nav-link'>Password</Link>\r\n            </li>\r\n        </ul>\r\n  </nav>\r\n);\r\n\r\n\r\nexport default AdminNav;\r\n","import React from 'react';\r\n\r\nconst CategoryForm = ({ handleSubmit, name, setName}) => (\r\n  <form onSubmit={handleSubmit}>\r\n    <div className='form-group'>\r\n          <label>Name</label>\r\n          <input\r\n            type='text'\r\n            className='form-control'\r\n            onChange={(e) => setName(e.target.value)}\r\n            value={name}\r\n            autoFocus\r\n            required\r\n           />\r\n           <br/>\r\n           <button className='btn btn-outline-primary'>Save</button>\r\n    </div>\r\n  </form>\r\n)\r\n\r\n\r\nexport default CategoryForm;\r\n","import React, {useState,useEffect}  from 'react';\r\nimport AdminNav from '../../../components/nav/AdminNav';\r\nimport {toast} from 'react-toastify';\r\nimport {useSelector} from 'react-redux';\r\nimport {\r\n  updateCategory,\r\n  getCategory\r\n} from '../../../functions/category';\r\nimport CategoryForm from '../../../components/forms/CategoryForm';\r\n\r\n\r\n\r\nconst CategoryUpdate = ({ history, match }) => {\r\n  const {user} = useSelector((state) => ({ ...state }));\r\n\r\n  const [name,setName] = useState('');\r\n  const [loading,setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n      // console.log(match);\r\n      loadCategory();\r\n  }, []);\r\n\r\n  const loadCategory = () =>\r\n      getCategory(match.params.slug).then((c) => setName(c.data.name));\r\n\r\n\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // console.log(name);\r\n    setLoading(true);\r\n    updateCategory(match.params.slug, {name}, user.token)\r\n    .then(res => {\r\n      setLoading(false);\r\n      setName('');\r\n      toast.success(`\"${res.data.name}\" is updated`);\r\n      history.push('/admin/category');\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      setLoading(false);\r\n      if (err.response.status === 400) toast.error(err.response.data);\r\n    })\r\n  }\r\n\r\n\r\n  return(\r\n  <div className='container-fluid'>\r\n    <div className='row'>\r\n        <div className='col-md-2'>\r\n            <AdminNav />\r\n        </div>\r\n        <div className='col'>\r\n                {loading ?(\r\n                  <h3 className='text-danger'> Loading... </h3>\r\n                ) : (\r\n                  <h3> Update Category </h3>\r\n                ) }\r\n                <CategoryForm  name={name} handleSubmit={handleSubmit} setName={setName}   />\r\n            <hr/>\r\n\r\n        </div>\r\n    </div>\r\n  </div>)\r\n};\r\n\r\nexport default CategoryUpdate;\r\n"],"sourceRoot":""}